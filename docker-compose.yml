services:
  rbmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672 # RabbitMQ Management UI
      - 5672:5672 # RabbitMQ AMQP protocol
    expose:
      - 5672
    # environment:
    #   RABBITMQ_DEFAULT_USER: user
    #   RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 3
    attach: false

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 3
    attach: false

  mqtt:
    image: eclipse-mosquitto:1.6.15
    ports:
      - 1883:1883
    expose:
      - 1883
    attach: false

  mqtt_monitor:
    image: eclipse-mosquitto:1.6.15
    command: mosquitto_sub -h mqtt -t '#'
    restart: always
    depends_on:
      - mqtt

  task_worker:
    build:
      context: src/task_worker
      dockerfile: Dockerfile
    environment:
      RABBITMQ_HOST: rbmq
      REDIS_HOST: redis
      MQTT_HOST: mqtt
    depends_on:
      rbmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mqtt:
        condition: service_started
    deploy:
      replicas: 1
    restart: always

  router_fwd:
    build:
      context: src/router
      dockerfile: Dockerfile
    environment:
      RABBITMQ_HOST: rbmq
      REDIS_HOST: redis
      MQTT_HOST: mqtt
    depends_on:
      rbmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mqtt:
        condition: service_started
    command: ./fwd
    deploy:
      replicas: 2
    restart: always

  router_bck:
    build:
      context: src/router
      dockerfile: Dockerfile
    environment:
      RABBITMQ_HOST: rbmq
      REDIS_HOST: redis
      MQTT_HOST: mqtt
    depends_on:
      rbmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mqtt:
        condition: service_started
    command: ./bck
    deploy:
      replicas: 2
    restart: always
